---
import BaseLayout from "@/layouts/BaseLayout.astro";
import HomeSlider from "@/components/HomeSlider.astro";
import Card, { CardBase } from "@/components/Card.astro";
import { Image } from "@astrojs/image/components";
import strapi from "@/api/strapi";
import type {
  AboutEntityResponse,
  EventEntityResponseCollection,
  NewsEntityResponseCollection,
} from "@/models/types";
import { articleToCard, imageRespToUrl } from "@/utils";

const newsResp = (await strapi.find("news-list", {
  populate: ["article", "article.cover"],
  filters: {
    isTop: {
      $eq: true,
    },
  },
  sort: ["article.publishDate:DESC", "order:ASC"],
  pagination: {
    start: 0,
    limit: 3,
  },
})) as NewsEntityResponseCollection;
const newsList = newsResp.data;

const newsCards = newsList.map((news) => {
  return articleToCard(
    news.attributes!.article,
    `/news/${news.id}/`
  ) as CardBase;
});

const eventsResp = (await strapi.find("events", {
  populate: ["article", "article.cover"],
  filters: {
    isTop: {
      $eq: true,
    },
  },
  sort: ["article.publishDate:DESC", "order:ASC"],
  pagination: {
    start: 0,
    limit: 3,
  },
})) as EventEntityResponseCollection;
const events = eventsResp.data;

const eventCards = events.map((event) => {
  return articleToCard(
    event.attributes!.article,
    `/events/${event.id}/`
  ) as CardBase;
});

const slides = newsCards.concat(eventCards);

const aboutResp = (await strapi.find("about", {
  populate: ["image", "partners.image"],
})) as AboutEntityResponse;
const about = aboutResp.data?.attributes!;

const titleClasses = [
  "font-semibold mb-2 mx-auto w-fit",
  "text-xl md:text-2xl lg:text-3xl",
];
---

<BaseLayout title="Home">
  <div class="flex flex-col gap-10 lg:gap-16">
    <HomeSlider slides={slides} />

    <section
      class:list={[
        "w-full max-w-5xl mx-auto px-5",
        "flex flex-col md:flex-row gap-5 md:gap-10",
      ]}
    >
      <div class="md:w-0 flex-grow">
        <h2 class:list={[titleClasses, "md:mx-0"]}>
          {about.title}
        </h2>
        <p style="hyphens:auto" class="text-justify">{about.content}</p>
      </div>

      <Image
        class="w-full md:w-0 flex-grow rounded"
        src={imageRespToUrl(about.image)}
        alt="image of about us"
        width={640}
        height={360}
        format="webp"
      />
    </section>

    <section class="px-5">
      <h2 class:list={titleClasses}>News</h2>

      <div
        class:list={[
          "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 lg:gap-10 mt-5",
          "max-w-7xl w-full mx-auto",
        ]}
      >
        {newsCards.map((card) => <Card card={card} />)}
      </div>
    </section>

    <section class="px-5">
      <h2 class:list={titleClasses}>Events</h2>

      <div
        class:list={[
          "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5 lg:gap-10 mt-5",
          "max-w-7xl w-full mx-auto",
        ]}
      >
        {eventCards.map((card) => <Card card={card} />)}
      </div>
    </section>

    {
      about.partners && (
        <section class="px-5">
          <h2 class:list={titleClasses}>Our Partners</h2>

          <div
            class:list={[
              "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5 lg:gap-10 mt-5",
              "max-w-5xl w-full mx-auto",
            ]}
          >
            {about.partners.map((partner) => (
              <a href={partner?.link} class="w-full">
                <Image
                  src={imageRespToUrl(partner?.image)}
                  width={250}
                  height={100}
                  format="webp"
                  fit="contain"
                  alt="partner"
                  background="white"
                  class="shadow-md hover:scale-110 transition rounded w-full h-auto border-gray-100 border"
                />
              </a>
            ))}
          </div>
        </section>
      )
    }

    <div class="mt-20"></div>
  </div>
</BaseLayout>
